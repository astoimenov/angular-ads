"use strict";var adsApp=angular.module("adsApp",["ngRoute","ngResource","LocalStorageModule","validation.match","ui.bootstrap.pagination"]).config(["$routeProvider","localStorageServiceProvider",function(e,t){e.when("/",{title:"Home",templateUrl:"templates/home.html",controller:"HomeCtrl"}),e.when("/login",{title:"Login",templateUrl:"templates/login.html",controller:"LoginCtrl"}),e.when("/register",{title:"Register",templateUrl:"templates/register.html",controller:"RegisterCtrl"}),e.when("/user/home",{title:"Home",templateUrl:"templates/user-home.html",controller:"UserHomeCtrl"}),e.when("/user/ads",{title:"My ads",templateUrl:"templates/user-home.html",controller:"UserAdsCtrl"}),e.when("/user/ads/publish",{title:"Publish new ad",templateUrl:"templates/publish-new-ad.html",controller:"PublishNewAdCtrl"}),e.when("/user/ads/edit/:id",{title:"Edit ad",templateUrl:"templates/edit-ad.html",controller:"EditAdCtrl"}),e.when("/user/ads/delete/:id",{title:"Delete ad",templateUrl:"templates/delete-ad.html",controller:"DeleteAdCtrl"}),e.when("/user/profile",{title:"Edit user profile",templateUrl:"templates/edit-profile.html",controller:"EditProfileCtrl"}),e.otherwise({redirectTo:"/"}),t.setStorageType("localStorage")}]);adsApp.constant("baseServiceUrl","http://softuni-ads.azurewebsites.net/api/"),adsApp.constant("pageSize",5),adsApp.run(["$rootScope","$location","authentication",function(e,t,r){e.$on("$routeChangeSuccess",function(t,r){e.title=r.$$route.title}),e.$on("$locationChangeStart",function(){-1==t.path().indexOf("/user/")||r.isLoggedIn()||t.path("/")})}]),adsApp.controller("DeleteAdCtrl",["$scope","$location","$routeParams","userAdsData","notification",function(e,t,r,a,o){e.homeLink="user/home";var n=r.id;a.getAdById(n).$promise.then(function(t){e.ad=t},function i(i){o.showError("Advertisement can not be deleted",i)}),e.delete=function(e){a.delete(e).$promise.then(function(){o.showInfo("Advertisement deleted"),t.path("/user/ads")},function r(r){o.showError("Advertisement can not be deleted",r)})}}]),adsApp.controller("EditAdCtrl",["$scope","$routeParams","$location","townsData","categoriesData","userAdsData","notification",function(e,t,r,a,o,n,i){e.homeLink="user/home";var s=t.id,d=!1;n.getAdById(s).$promise.then(function(t){e.adData=t},function l(l){i.showError("Advertisement can not be edited",l)}),e.categories=o.getCategories(),e.towns=a.getTowns(),e.deleteImage=function(){delete e.adData.imageDataUrl,d=!0},e.fileSelected=function(t){delete e.adData.imageDataUrl;var r=t.files[0];if(r.type.match(/image\/.*/)){var a=new FileReader;a.onload=function(){e.adData.imageDataUrl=a.result,d=!0,$(".image-box").html("<img src='"+a.result+"'>")},a.readAsDataURL(r)}else $(".image-box").html("<p>File type not supported!</p>")},e.edit=function(e){e.changeImage=d,n.edit(s,e).$promise.then(function(){i.showInfo("Advertisement edited. Don't forget to submit it for publishing."),r.path("/user/ads")},function t(t){i.showError("Editing failed",t)})}}]),adsApp.controller("EditProfileCtrl",["$scope","$location","townsData","userData","notification",function(e,t,r,a,o){e.homeLink="user/home",e.pass={oldPassword:null,newPassword:null,confirmPassword:null},e.towns=r.getTowns(),e.user=a.getUserProfile(),e.edit=function(e){a.edit(e).$promise.then(function(){o.showInfo("User profile successfully updated."),t.path("/user/home")},function r(r){o.showError("User profile is not updated.",r)})},e.changePassword=function(e){a.changePassword(e).$promise.then(function(){o.showInfo("Password successfully updated."),t.path("/user/home")},function r(r){o.showError("Password is not updated.",r)})}}]),adsApp.controller("HomeCtrl",["$scope","$location","$route","userData","authentication",function(e,t,r,a,o){e.authentication=o,e.isLoggedIn=o.isLoggedIn(),e.logout=function(e){a.logout(e),"/"==t.$$path?r.reload():t.path("/")}}]),adsApp.controller("LoginCtrl",["$scope","$location","userData","notification",function(e,t,r,a){e.login=function(e){r.login(e).$promise.then(function(){a.showInfo("Login successful"),t.path("/user/home")},function o(o){a.showError("Invalid login",o)})}}]),adsApp.controller("ManageAdMenuCtrl",["$scope","$route","userAdsData","notification",function(e,t,r,a){e.deactivate=function(e){r.deactivate(e).$promise.then(function(){a.showInfo("Ad is deactivated"),t.reload()},function o(o){a.showError("Can't deactivate the ad",o)})},e.publishAgain=function(e){r.publishAgain(e).$promise.then(function(){a.showInfo("Ad is published again for approval."),t.reload()},function o(o){a.showError("Can't publish the ad",o)})}}]),adsApp.controller("PublicAdsCtrl",["$scope","adsData","pageSize","notification",function(e,t,r,a){e.ready=!1,e.adsParams={startPage:1,pageSize:r},e.reloadAds=function(){t.getPublicAds(e.adsParams).$promise.then(function(t){e.ads=t,e.ready=!0},function r(r){a.showError("Cannot load ads",r)})},e.reloadAds(),e.$on("categorySelectionChanged",function(t,r){e.adsParams.categoryId=r,e.adsParams.startPage=1,e.reloadAds()}),e.$on("townSelectionChanged",function(t,r){e.adsParams.townId=r,e.adsParams.startPage=1,e.reloadAds()})}]),adsApp.controller("PublishNewAdCtrl",["$scope","$location","townsData","categoriesData","userAdsData","notification",function(e,t,r,a,o,n){e.homeLink="user/home",e.adData={townId:null,categoryId:null},e.categories=a.getCategories(),e.towns=r.getTowns(),e.fileSelected=function(t){delete e.adData.imageDataUrl;var r=t.files[0];if(r.type.match(/image\/.*/)){var a=new FileReader;a.onload=function(){e.adData.imageDataUrl=a.result,$(".image-box").html("<img src='"+a.result+"'>")},a.readAsDataURL(r)}else $(".image-box").html("<p>File type not supported!</p>")},e.publishAd=function(e){null==e.imageDataUrl&&(e.imageDataUrl=""),o.add(e).$promise.then(function(){n.showInfo("Advertisement submitted dor approval. Once approved, it will be published."),t.path("/user/ads")},function r(r){n.showError("Publishing failed",r)})}}]),adsApp.controller("RegisterCtrl",["$scope","$location","townsData","userData","notification",function(e,t,r,a,o){e.towns=r.getTowns(),e.register=function(e){a.register(e).$promise.then(function(){o.showInfo("User account created. Please log in."),t.path("/login")},function r(r){o.showError("Invalid registration",r)})}}]),adsApp.controller("RightSidebarCtrl",["$scope","$rootScope","townsData","categoriesData",function(e,t,r,a){e.categories=a.getCategories(),e.towns=r.getTowns(),e.categoryClicked=function(r){e.selectedCategoryId=r,t.$broadcast("categorySelectionChanged",r)},e.townClicked=function(r){e.selectedTownId=r,t.$broadcast("townSelectionChanged",r)}}]),adsApp.controller("StatusFilterCtrl",["$scope","$rootScope",function(e,t){e.statusClicked=function(r){e.selectedStatusId=r,t.$broadcast("statusSelectionChanged",r)}}]),adsApp.controller("UserAdsCtrl",["$scope","$route","adsData","userAdsData","userData","pageSize","notification",function(e,t,r,a,o,n,i){e.homeLink="user/home",e.inMyAds=!0,e.ready=!1,e.adsParams={startPage:1,pageSize:n},e.reloadAds=function(){a.getUserAds(e.adsParams).$promise.then(function(t){e.ads=t,e.ready=!0},function t(t){i.showError("Cannot load ads",t)})},e.reloadAds(),e.$on("categorySelectionChanged",function(t,r){e.adsParams.categoryId=r,e.adsParams.startPage=1,e.reloadAds()}),e.$on("townSelectionChanged",function(t,r){e.adsParams.townId=r,e.adsParams.startPage=1,e.reloadAds()}),e.$on("statusSelectionChanged",function(t,r){e.adsParams.status=r,e.adsParams.startPage=1,e.reloadAds()})}]),adsApp.controller("UserHomeCtrl",["$scope","$location","$route","userData","authentication",function(e,t,r,a,o){e.homeLink="user/home",e.authentication=o,e.isLoggedIn=o.isLoggedIn(),e.inHome="/user/home"==t.$$path,e.inMyAds="/user/ads"==t.$$path,e.inPublishNew="/user/ads/publish"==t.$$path,e.logout=function(e){a.logout(e),"/"==t.$$path?r.reload():t.path("/")}}]),adsApp.directive("categories",function(){return{controller:"RightSidebarCtrl",restrict:"E",templateUrl:"templates/directives/categories.html",replace:!0}}),adsApp.directive("changeTitleOnBlur",[function(){return{restrict:"A",scope:!0,link:function(e){document.title="Ads - "+e.title,$(window).focus(function(){document.title="Ads - "+e.title}),$(window).blur(function(){document.title="I miss you.."})}}}]),adsApp.directive("loggedInSidebar",function(){return{controller:"HomeCtrl",restrict:"E",templateUrl:"templates/directives/logged-in-sidebar.html",replace:!0}}),adsApp.directive("manageAdMenu",function(){return{controller:"ManageAdMenuCtrl",restrict:"E",templateUrl:"templates/directives/manage-ad-menu.html",replace:!0}}),adsApp.directive("navigation",function(){return{restrict:"E",templateUrl:"templates/directives/navigation.html",replace:!0}}),adsApp.directive("publicAds",function(){return{controller:"PublicAdsCtrl",restrict:"E",templateUrl:"templates/directives/public-ads.html",replace:!0}}),adsApp.directive("publicLeftSidebar",function(){return{controller:"HomeCtrl",restrict:"E",templateUrl:"templates/directives/left-sidebar.html",replace:!0}}),adsApp.directive("statusFilter",function(){return{controller:"StatusFilterCtrl",restrict:"E",templateUrl:"templates/directives/status-filter.html",replace:!0}}),adsApp.directive("towns",function(){return{controller:"RightSidebarCtrl",restrict:"E",templateUrl:"templates/directives/towns.html",replace:!0}}),adsApp.directive("userAds",function(){return{controller:"UserAdsCtrl",restrict:"E",templateUrl:"templates/directives/user-ads.html",replace:!0}}),adsApp.factory("authentication",["localStorageService",function(e){function t(t){e.set(s,t)}function r(){return e.get(s)}function a(){localStorage.removeItem("ls.user")}function o(){var e={},t=r();return t&&(e.Authorization="Bearer "+t.access_token),e}function n(){return r().isAdmin}function i(){return!!r()}var s="user";return{saveUser:t,getUserData:r,removeUser:a,getHeaders:o,isAdmin:n,isLoggedIn:i}}]),adsApp.factory("notification",function(){return{showInfo:function(e){noty({text:e,type:"info",layout:"topCenter",timeout:3e3})},showError:function(e,t){var r=[];if(t&&t.data.error_description&&r.push(t.data.error_description),t&&t.data.modelState){var a=t.data.modelState;for(var o in a)for(var n=a[o],i=o.substr(o.indexOf(".")+1),s=0;s<n.length;s++){var d=n[s];r.push(i+" - "+d)}}r.length>0&&(e=e+":<br>"+r.join("<br>")),noty({text:e,type:"error",layout:"topCenter",timeout:5e3})}}}),adsApp.factory("adsData",["$resource","authentication","baseServiceUrl",function(e,t,r){function a(e){return i.save(e)}function o(e){return i.getAll(e)}function n(e,t){return i.update({id:e},t)}var i=e(r+"ads/:adId",{adId:"@id"},{update:{method:"PUT"},getAll:{method:"GET"}});return{add:a,getPublicAds:o,edit:n}}]),adsApp.factory("categoriesData",["$resource","baseServiceUrl",function(e,t){function r(){return a.query()}var a=e(t+"categories");return{getCategories:r}}]),adsApp.factory("townsData",["$resource","baseServiceUrl",function(e,t){function r(){return a.query()}var a=e(t+"towns");return{getTowns:r}}]),adsApp.factory("userAdsData",["$resource","authentication","baseServiceUrl",function(e,t,r){function a(e){return c.save(e)}function o(e){return c.getAll(e)}function n(e){return c.get({adId:e})}function i(e,t){return c.update({adId:e},t)}function s(a){var o=e(r+"user/ads/deactivate/:adId",{adId:"@id"},{update:{method:"PUT",headers:t.getHeaders()}});return o.update({id:a})}function d(a){var o=e(r+"user/ads/publishagain/:adId",{adId:"@id"},{update:{method:"PUT",headers:t.getHeaders()}});return o.update({id:a})}function l(e){return c.remove({adId:e})}var c=e(r+"user/ads/:adId",{adId:"@id"},{update:{method:"PUT",headers:t.getHeaders()},getAll:{method:"GET",headers:t.getHeaders()},get:{method:"GET",headers:t.getHeaders()},remove:{method:"DELETE",headers:t.getHeaders()},save:{method:"POST",headers:t.getHeaders()}});return{add:a,getUserAds:o,getAdById:n,edit:i,deactivate:s,publishAgain:d,"delete":l}}]),adsApp.factory("userData",["$http","$resource","baseServiceUrl","authentication",function(e,t,r,a){function o(){var e=t(c+"profile",{},{get:{method:"GET",headers:a.getHeaders()}});return e.get()}function n(e){return t(c+"register").save(e)}function i(e){var r=t(c+"login").save(e);return r.$promise.then(function(e){a.saveUser(e)}),r}function s(e){var r=t(c+"profile",{},{update:{method:"PUT",headers:a.getHeaders()}});return r.update(e)}function d(e){var r=t(c+"changePassword",{},{update:{method:"PUT",headers:a.getHeaders()}});return r.update(e)}function l(){a.removeUser()}var c=r+"user/";return{getUserProfile:o,register:n,login:i,edit:s,changePassword:d,logout:l}}]);
//# sourceMappingURL=data:application/json;base64,